[package]
name = "kronos-compute"
version = "0.2.0-rc10"
edition = "2021"
rust-version = "1.70"
authors = ["Lynn Cole <lynn@lynncole.art>"]
description = "A high-performance compute-only Vulkan implementation with cutting-edge GPU optimizations"
license = "MIT OR Apache-2.0"
repository = "https://github.com/LynnColeArt/kronos-compute"
homepage = "https://github.com/LynnColeArt/kronos-compute"
documentation = "https://docs.rs/kronos-compute"
readme = "README.md"
keywords = ["vulkan", "compute", "gpu", "gpgpu", "hpc"]
categories = ["graphics", "api-bindings", "concurrency", "hardware-support"]
exclude = ["target/*", ".git/*", "*.backup"]

[dependencies]
# Core dependencies
libc = "0.2"
bitflags = "2.4"
lazy_static = { version = "1.4", optional = true }
log = "0.4"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
libloading = "0.8"

# Optional dependencies for different features
ash = { version = "0.37", optional = true }  # For comparison with standard Vulkan
thiserror = "1.0"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
env_logger = "0.10"

[features]
default = ["validation", "implementation"]
validation = []
vendored = []  # Use vendored loader
compare-ash = ["ash"]  # Enable comparison benchmarks with ash
implementation = ["lazy_static"]  # Enable the Rust implementation

[lib]
name = "kronos_compute"
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "demo"
path = "src/bin/demo.rs"
required-features = ["implementation"]

[[bin]]
name = "test_minimal"
path = "src/bin/test_minimal.rs"
required-features = ["implementation"]

[[bin]]
name = "test_optimizations"
path = "src/bin/test_optimizations.rs"
required-features = ["implementation"]

[[example]]
name = "compute_simple"
path = "examples/compute_simple.rs"

[[bench]]
name = "api_overhead"
harness = false

[[bench]]
name = "initialization"
harness = false

[[bench]]
name = "dispatch_throughput"
harness = false

[[bench]]
name = "memory_operations"
harness = false

[[bench]]
name = "compute_workloads"
harness = false

[profile.release]
lto = true
codegen-units = 1
opt-level = 3

[profile.bench]
lto = true
codegen-units = 1
opt-level = 3
